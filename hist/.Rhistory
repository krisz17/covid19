install.packages("tidyverse")
install.packages("tidyverse")
install.packages(c("class", "cli", "foreign", "MASS", "Matrix", "nlme", "nnet", "spatial"))
require(tidyverse)
exit
load("E:/page ds/pages/ts_covid19/hist/.RData")
plot_ly(x=1:32) %>%
add_lines(y = covid19.nowe.przypadki.test, color = I("red"), name = "Test") %>%
add_lines(y = fc_mod$mean, color = I("green"), name = "Forecast")
library(tidyverse)
library(stringr)
library(lubridate)
library(xts)
library(forecast)
library(tsibble)
library(fable)
library(fabletools)
#library(tsibbledata)
library(feasts)  # potrzebne do sparametryzowania automatycznego doboru lambdy
library(plotly)
plot_ly(x=1:32) %>%
add_lines(y = covid19.nowe.przypadki.test, color = I("red"), name = "Test") %>%
add_lines(y = fc_mod$mean, color = I("green"), name = "Forecast")
fc_mod <- forecast(mod17,h = 32)
plot(covid19.nowe.przypadki.test ,type="l",col="red")
lines(inv_box_cox(fc_mod$mean, lambda_),col="green")
plot_ly(x=1:32) %>%
add_lines(y = covid19.nowe.przypadki.test, color = I("red"), name = "Test") %>%
add_lines(y = fc_mod$mean, color = I("green"), name = "Forecast")
plot_ly(x=1:32) %>%
add_lines(y = covid19.nowe.przypadki.test, color = I("red"), name = "Test") %>%
add_lines(y = cumsum(fc_mod$mean), color = I("green"), name = "Forecast")
library(tidyverse)
library(stringr)
library(lubridate)
library(xts)
library(forecast)
library(tsibble)
library(fable)
library(fabletools)
#library(tsibbledata)
library(feasts)  # potrzebne do sparametryzowania automatycznego doboru lambdy
library(plotly)
setwd('E:/page ds/pages/ts_covid19/hist/')
covid19 <- read.csv('E:\\page ds\\pages\\ts_covid19\\covid19_dane.csv')
covid19$Data <- as.Date(covid19$Data)
covid19.nowe.przypadki <-  covid19[,c(1,2)]
covid19.zgony <-  covid19[,c(1,3)]
covid19.nowe.przypadki <- xts(x = covid19.nowe.przypadki$Nowe.przypadki, order.by = covid19.nowe.przypadki$Data)
covid19.nowe.przypadki <- covid19.nowe.przypadki['2020-07-31/']
names(covid19.nowe.przypadki) <- c('przypadki')
covid19.nowe.przypadki.train <- covid19.nowe.przypadki['/2022-07-12']
covid19.nowe.przypadki.test <- covid19.nowe.przypadki['2022-07-13/']
covid19.nowe.przypadki.train %>% autoplot() +labs(title= "C19 new cases - train set",
y = "#cases", x = "Date of research")
mod <- auto.arima(covid19.nowe.przypadki.train)
Sys.setenv(LANG = "en")
tmp_lambda <-  covid19[,c(1,2)] %>% as_tsibble()
# podzbi√≥r taki jak dla zbioru testowego
tmp_lambda <- tmp_lambda %>% filter(Data >= '2020-07-31' & Data <= '2022-07-12' ) %>% as_tsibble()
lambda_ <- tmp_lambda %>%
features(Nowe.przypadki, features = guerrero) %>%
pull(lambda_guerrero)
tmp <- box_cox(covid19.nowe.przypadki.train,lambda = lambda_)
tmp %>% autoplot() +labs(title= "C19 new cases with CoxBox transformation with lambda = 0.0729",
y = "CB(cases)", x = "Date of research")
covid19.nowe.przypadki.train.lambda <- box_cox(covid19.nowe.przypadki.train,lambda = lambda_)
mod.lambda <- auto.arima(covid19.nowe.przypadki.train.lambda)
covid19.nowe.przypadki.test <- ts(covid19.nowe.przypadki.test, start = length(covid19.nowe.przypadki.train)+1)
fc_mod <- forecast(mod,h = 14)
autoplot(fc_mod) +
autolayer(covid19.nowe.przypadki.test, series="Test Data") +
autolayer(fc_mod$mean, series="Forecasts")
fc_mod_lambda <- forecast(mod.lambda,h = 14)
summary(mod)
covid19.nowe.przypadki.test <- ts(covid19.nowe.przypadki.test, start = length(covid19.nowe.przypadki.train)+1)
fc_mod <- forecast(mod,h = 14)
fc_mod_lambda <- forecast(mod.lambda,h = 14)
covid19.nowe.przypadki.diff1 <- diff(covid19.nowe.przypadki.train, lag = 1)
mod1 <- auto.arima(covid19.nowe.przypadki.diff1)
summary(mod1)
fc_mod1 <- forecast(mod1,h = 14)
ost <- coredata(covid19.nowe.przypadki.train[length(covid19.nowe.przypadki.train)])
plot_ly(x=1:14) %>%
add_lines(y = coredata(covid19.nowe.przypadki.test), color = I("red"), name = "Test") %>%
add_lines(y = cumsum(fc_mod1$mean) + ost, color = I("orange"), name = "Model after diff Lag=1 (5,0,2)") %>%
add_lines(y = inv_box_cox(fc_mod_lambda$mean, lambda_), color = I("green"), name = "Forecast ARIMA Box-Cox transform (3,1,3)") %>%
add_lines(y = fc_mod$mean, color = I("blue"), name = "Forecast ARIMA autmoatic (1,0,2)")
coredata(covid19.nowe.przypadki.train).tail
coredata(covid19.nowe.przypadki.train)
tail(coredata(covid19.nowe.przypadki.train))
names(coredata(covid19.nowe.przypadki.train))
str(covid19.nowe.przypadki.train)
names(coredata(covid19.nowe.przypadki.train))
str(coredata(covid19.nowe.przypadki.train))
coredata(covid19.nowe.przypadki.train)$przypadki
head(coredata(covid19.nowe.przypadki.train))
coredata(covid19.nowe.przypadki.train)[2:4,]
coredata(covid19.nowe.przypadki.train)[:,]
coredata(covid19.nowe.przypadki.train)[,]
head(mod$residuals)
coredata(covid19.nowe.przypadki.train)[,] + mod$residuals
fitted(mod, h = 1)
fitted(mod.lambda, h = 1)
inv_box_cox(fitted(mod.lambda, h = 1), lambda_)
fitted(fc_mod1, h = 1)
cumsum(fitted(fc_mod1, h = 1))
coredata(covid19.nowe.przypadki.train[1])
coredata(covid19.nowe.przypadki.train[1])[,]
prognoza <- fitted(fc_mod1, h = 1)
prognoza[1] <-  coredata(covid19.nowe.przypadki.train[1])[,]
coredata(covid19.nowe.przypadki.train[1])[,]
prognoza
cumsum(prognoza)
fitted(fc_mod1, h =2)
fitted(fc_mod1, h =1)
fc_mod1$series
fc_mod1$residuals
covid19.nowe.przypadki.diff1+fitted(fc_mod1, h =1)
coredata(covid19.nowe.przypadki.diff1)+fitted(fc_mod1, h =1)
cls
clear()
cl
cl()
prognoza <- coredata(covid19.nowe.przypadki.diff1)+fitted(fc_mod1, h =1)
prognoza[1] <-  coredata(covid19.nowe.przypadki.train[1])[,]
coredata(covid19.nowe.przypadki.diff1)+fitted(fc_mod1, h =1)
cumsum(prognoza)
prognoza <- coredata(covid19.nowe.przypadki.diff1)+fc_mod1$residuals
prognoza[1] <-  coredata(covid19.nowe.przypadki.train[1])[,]
cumsum(prognoza)
prognoza
prognoza <- coredata(covid19.nowe.przypadki.diff1)-fc_mod1$residuals
prognoza[1] <-  coredata(covid19.nowe.przypadki.train[1])[,]
head(prognoza, 10)
cumsum(prognoza)
prognoza <- coredata(covid19.nowe.przypadki.diff1)-fc_mod1$residuals
head(prognoza)
prognoza *-1
prognoza <- prognoza * - 1
prognoza[1] <-  coredata(covid19.nowe.przypadki.train[1])[,]
cumsum(prognoza)
cumsum(prognoza)
covTrain <- data.frame(index = 1:712,
dane = coredata(covid19.nowe.przypadki.train),
Arima_lag1 = cumsum(prognoza),
Arima_bc = inv_box_cox(fitted(mod.lambda, h = 1), lambda_) ,
Arima_auto = fitted(mod, h = 1))
head(covTrain , 10)
write.csv(covTrain,'E:\\page ds\\pages\\ts_covid19\\covTrain.csv', row.names = FALSE)
